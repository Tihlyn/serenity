# Environment variables and secrets
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# Bot configuration files (if they contain secrets)
config.json
bot-config.json

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime files
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# Logs
logs/
*.log

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Database files (if using local SQLite)
*.db
*.sqlite
*.sqlite3

# Redis dump files (if using local Redis)
dump.rdb

# Docker files (optional - remove if you want to version control them)
# docker-compose.override.yml
# Dockerfile.local

# Temporary files
tmp/
temp/

# Build outputs
dist/
build/

# PM2 process files
ecosystem.config.js

# SSL certificates (if any)
*.pem
*.key
*.crt
*.csr

# Backup files
*.bak
*.backup

# Test coverage
coverage/
.nyc_output/

# Lock files (choose one based on your package manager)
# Uncomment the one you DON'T use:
# package-lock.json  # if using yarn
# yarn.lock          # if using npm